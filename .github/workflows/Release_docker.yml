# 如需推送DOCKERHUB，需要secrets中配置变量secrets.DOCKERHUB_USERNAME， secrets.DOCKERHUB_TOKEN 
name: Build and Push Docker when Release

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      image_name:
        description: 'Enter the name for the Docker image'
        default: 'chuanhu-chatgpt'
        required: true
      tag_version:
        description: 'Enter the tag version for the Docker image'
        default: 'latest'
        required: false

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.release.target_commitish }}

      - name : Set up QEMU
        uses : docker/setup-qemu-action@v2

      - name : Set up Docker Buildx 
        uses : docker/setup-buildx-action@v2
        
      # - name: Login to Docker Hub
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name : Login to GitHub Container Registry 
        uses : docker/login-action@v2 
        with :
               registry : ghcr.io 
               username : ${{ github.repository_owner }}
               password : ${{ secrets.GITHUB_TOKEN }}
      - name: Get owner and image names in lowercase 
        run: |
          GITOWNER=`echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]'`
          IMAGE_NAME=`echo "${{ github.event.inputs.image_name }}" | tr '[:upper:]' '[:lower:]'`
          if [ "${{github.event_name}}" = "release" ]; then
            RELEASE_TAG="${{github.event.release.tag_name}}"
          else
            RELEASE_TAG="${{github.event.inputs.tag_version}}"
          fi
          echo "GITOWNER=$GITOWNER" >>$GITHUB_ENV
          echo "IMAGE_NAME=$IMAGE_NAME" >>$GITHUB_ENV
          echo "RELEASE_TAG=$RELEASE_TAG" >>$GITHUB_ENV 
          echo "GITOWNER=$GITOWNER"
          echo "IMAGE_NAME=$IMAGE_NAME"
          echo "RELEASE_TAG=$RELEASE_TAG"
          
      - name : Build and push
        uses :  docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          # The following tags are for Docker Hub, uncomment if needed.
          # tags: |
          #   ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.RELEASE_TAG }}
          #   ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest
          tags: |
            ghcr.io/${{ env.GITOWNER }}/${{ env.IMAGE_NAME }}:${{ env.RELEASE_TAG }}
            ghcr.io/${{ env.GITOWNER }}/${{ env.IMAGE_NAME }}:latest
          cache-from: type=gha,scope=${{ github.repository }}
          cache-to: type=gha,scope=${{ github.repository }}
  
      - name: Clean up cache
        run: docker builder prune --
